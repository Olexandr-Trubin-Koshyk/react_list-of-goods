{"version":3,"sources":["components/GoodsList.tsx/GoodsList.tsx","App.tsx","index.tsx"],"names":["goodsFromServer","GoodsList","state","goods","isReversed","isAlphabetSort","isLengthSort","reverseSort","setState","alphabetSort","lengthSort","reset","this","goodsCopy","reverse","sort","a","b","localeCompare","length","className","type","onClick","map","good","React","PureComponent","App","showedGoods","showGoods","ReactDOM","render","document","getElementById"],"mappings":"gRAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUWC,EAAb,4MACEC,MAAQ,CACNC,MAAOH,EACPI,YAAY,EACZC,gBAAgB,EAChBC,cAAc,GALlB,EAQEC,YAAc,WACZ,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAVzB,EAcEK,aAAe,WACb,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBG,gBAAiBH,EAAMG,oBAhB7B,EAoBEK,WAAa,WACX,EAAKF,UAAS,SAAAN,GAAK,MAAK,CACtBI,cAAeJ,EAAMI,kBAtB3B,EA0BEK,MAAQ,WACN,EAAKH,SAAS,CACZJ,YAAY,EACZC,gBAAgB,EAChBC,cAAc,KA9BpB,4CAkCE,WACE,MAKIM,KAAKV,MAJPC,EADF,EACEA,MACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,eACAC,EAJF,EAIEA,aAGIO,EAAS,YAAOV,GActB,OAZIC,GACFS,EAAUC,UAGRT,GACFQ,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAGvCX,GACFO,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAItC,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBACEC,KAAK,SACLC,QAASV,KAAKL,YACda,UAAU,mDAHZ,qBAOA,wBACEC,KAAK,SACLC,QAASV,KAAKH,aACdW,UAAU,oDAHZ,iCAOA,wBACEC,KAAK,SACLC,QAASV,KAAKF,WACdU,UAAU,kDAHZ,4BAOA,wBACEC,KAAK,SACLC,QAASV,KAAKD,MACdS,UAAU,iDAHZ,2BAQF,oBAAIA,UAAU,kBAAd,SACGP,EAAUU,KAAI,SAAAC,GAAI,OACjB,oBAAeJ,UAAU,kBAAzB,SACGI,GADMA,eA1FrB,GAA+BC,IAAMC,eCf/BC,E,4MACJzB,MAAQ,CACN0B,aAAa,G,EAGfC,UAAY,WACV,EAAKrB,SAAS,CACZoB,aAAa,K,4CAIjB,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBAEER,KAAKV,MAAM0B,YAEP,cAAC,EAAD,IAGA,wBACEP,KAAK,SACLC,QAASV,KAAKiB,UACdT,UAAU,cAHZ,0B,GArBIK,IAAMC,eAmCTC,ICxCfG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1ff2127b.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[],\n  isReversed: boolean,\n  isAlphabetSort: boolean,\n  isLengthSort: boolean,\n}\n\nexport class GoodsList extends React.PureComponent<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isReversed: false,\n    isAlphabetSort: false,\n    isLengthSort: false,\n  };\n\n  reverseSort = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  alphabetSort = () => {\n    this.setState(state => ({\n      isAlphabetSort: !state.isAlphabetSort,\n    }));\n  };\n\n  lengthSort = () => {\n    this.setState(state => ({\n      isLengthSort: !state.isLengthSort,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      isAlphabetSort: false,\n      isLengthSort: false,\n    });\n  };\n\n  render() {\n    const {\n      goods,\n      isReversed,\n      isAlphabetSort,\n      isLengthSort,\n    } = this.state;\n\n    const goodsCopy = [...goods];\n\n    if (isReversed) {\n      goodsCopy.reverse();\n    }\n\n    if (isAlphabetSort) {\n      goodsCopy.sort((a, b) => a.localeCompare(b));\n    }\n\n    if (isLengthSort) {\n      goodsCopy.sort((a, b) => a.length - b.length);\n    }\n\n    return (\n      <div className=\"goodsMenu\">\n        <div className=\"goodsMenu__buttons\">\n          <button\n            type=\"button\"\n            onClick={this.reverseSort}\n            className=\"goodsMenu__button goodsMenu__button--reverseSort\"\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.alphabetSort}\n            className=\"goodsMenu__button goodsMenu__button--alphabetSort\"\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.lengthSort}\n            className=\"goodsMenu__button goodsMenu__button--lengthSort\"\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.reset}\n            className=\"goodsMenu__button goodsMenu__button--resetSort\"\n          >\n            Reset sort\n          </button>\n        </div>\n        <ul className=\"goodsMenu__list\">\n          {goodsCopy.map(good => (\n            <li key={good} className=\"goodsMenu__item\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList.tsx/GoodsList';\n\ninterface State {\n  showedGoods: boolean;\n}\n\nclass App extends React.PureComponent<{}, State> {\n  state = {\n    showedGoods: false,\n  };\n\n  showGoods = () => {\n    this.setState({\n      showedGoods: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        {\n          this.state.showedGoods\n            ? (\n              <GoodsList />\n            )\n            : (\n              <button\n                type=\"button\"\n                onClick={this.showGoods}\n                className=\"App__button\"\n              >\n                Start\n              </button>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}